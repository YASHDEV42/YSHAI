/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * YSHAI API
 * Generated for Orval client
 * OpenAPI spec version: 1.0
 */
import type {
  MediaControllerUploadBody,
  MediaResponseDto
} from '.././models';


/**
 * @summary Upload a media file (image or video) to Cloudinary
 */
export type mediaControllerUploadResponse201 = {
  data: MediaResponseDto
  status: 201
}
    
export type mediaControllerUploadResponseSuccess = (mediaControllerUploadResponse201) & {
  headers: Headers;
};
;

export type mediaControllerUploadResponse = (mediaControllerUploadResponseSuccess)

export const getMediaControllerUploadUrl = () => {


  

  return `http://localhost:5000/media`
}

export const mediaControllerUpload = async (mediaControllerUploadBody: MediaControllerUploadBody, options?: RequestInit): Promise<mediaControllerUploadResponse> => {
    const formData = new FormData();
if(mediaControllerUploadBody.file !== undefined) {
 formData.append(`file`, mediaControllerUploadBody.file)
 }
if(mediaControllerUploadBody.postId !== undefined) {
 formData.append(`postId`, mediaControllerUploadBody.postId.toString())
 }

  const res = await fetch(getMediaControllerUploadUrl(),
  {      
    ...options,
    method: 'POST'
    ,
    body: 
      formData,
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  
  const data: mediaControllerUploadResponse['data'] = body ? JSON.parse(body) : {}
  return { data, status: res.status, headers: res.headers } as mediaControllerUploadResponse
}


/**
 * @summary List all uploaded media
 */
export type mediaControllerFindAllResponse200 = {
  data: MediaResponseDto[]
  status: 200
}
    
export type mediaControllerFindAllResponseSuccess = (mediaControllerFindAllResponse200) & {
  headers: Headers;
};
;

export type mediaControllerFindAllResponse = (mediaControllerFindAllResponseSuccess)

export const getMediaControllerFindAllUrl = () => {


  

  return `http://localhost:5000/media`
}

export const mediaControllerFindAll = async ( options?: RequestInit): Promise<mediaControllerFindAllResponse> => {
  
  const res = await fetch(getMediaControllerFindAllUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  
  const data: mediaControllerFindAllResponse['data'] = body ? JSON.parse(body) : {}
  return { data, status: res.status, headers: res.headers } as mediaControllerFindAllResponse
}


/**
 * @summary Delete a media file from Cloudinary and database
 */
export type mediaControllerRemoveResponse200 = {
  data: void
  status: 200
}

export type mediaControllerRemoveResponse404 = {
  data: void
  status: 404
}
    
export type mediaControllerRemoveResponseSuccess = (mediaControllerRemoveResponse200) & {
  headers: Headers;
};
export type mediaControllerRemoveResponseError = (mediaControllerRemoveResponse404) & {
  headers: Headers;
};

export type mediaControllerRemoveResponse = (mediaControllerRemoveResponseSuccess | mediaControllerRemoveResponseError)

export const getMediaControllerRemoveUrl = (id: number,) => {


  

  return `http://localhost:5000/media/${id}`
}

export const mediaControllerRemove = async (id: number, options?: RequestInit): Promise<mediaControllerRemoveResponse> => {
  
  const res = await fetch(getMediaControllerRemoveUrl(id),
  {      
    ...options,
    method: 'DELETE'
    
    
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  
  const data: mediaControllerRemoveResponse['data'] = body ? JSON.parse(body) : {}
  return { data, status: res.status, headers: res.headers } as mediaControllerRemoveResponse
}


