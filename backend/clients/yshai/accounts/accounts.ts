/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * YSHAI API
 * Generated for Orval client
 * OpenAPI spec version: 1.0
 */
import type {
  LinkAccountResponseDto,
  LinkAccountWithTokensDto,
  MessageDto
} from '.././models';


/**
 * @summary Link Account
 */
export type accountsControllerLinkResponse201 = {
  data: LinkAccountResponseDto
  status: 201
}
    
export type accountsControllerLinkResponseSuccess = (accountsControllerLinkResponse201) & {
  headers: Headers;
};
;

export type accountsControllerLinkResponse = (accountsControllerLinkResponseSuccess)

export const getAccountsControllerLinkUrl = () => {


  

  return `http://localhost:5000/accounts`
}

export const accountsControllerLink = async (linkAccountWithTokensDto: LinkAccountWithTokensDto, options?: RequestInit): Promise<accountsControllerLinkResponse> => {
  
  const res = await fetch(getAccountsControllerLinkUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      linkAccountWithTokensDto,)
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  
  const data: accountsControllerLinkResponse['data'] = body ? JSON.parse(body) : {}
  return { data, status: res.status, headers: res.headers } as accountsControllerLinkResponse
}


/**
 * @summary Unlink Account
 */
export type accountsControllerUnlinkResponse200 = {
  data: MessageDto
  status: 200
}
    
export type accountsControllerUnlinkResponseSuccess = (accountsControllerUnlinkResponse200) & {
  headers: Headers;
};
;

export type accountsControllerUnlinkResponse = (accountsControllerUnlinkResponseSuccess)

export const getAccountsControllerUnlinkUrl = (accountId: number,) => {


  

  return `http://localhost:5000/accounts/${accountId}`
}

export const accountsControllerUnlink = async (accountId: number, options?: RequestInit): Promise<accountsControllerUnlinkResponse> => {
  
  const res = await fetch(getAccountsControllerUnlinkUrl(accountId),
  {      
    ...options,
    method: 'DELETE'
    
    
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  
  const data: accountsControllerUnlinkResponse['data'] = body ? JSON.parse(body) : {}
  return { data, status: res.status, headers: res.headers } as accountsControllerUnlinkResponse
}


