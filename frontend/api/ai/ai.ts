/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * YSHAI API
 * The YSHAI backend API documentation. This API manages posts, teams, media, AI generation, moderation, analytics, billing, and more.
 * OpenAPI spec version: 1.0
 */
import type {
  GenerateAltTextDto,
  GenerateAltTextResponseDto,
  GenerateCaptionDto,
  GenerateCaptionResponseDto,
  GenerateHashtagsDto,
  GenerateHashtagsResponseDto
} from '.././model';

import aiControllerGenerateCaptionMutator from '../../lib/orval-mutator';
import aiControllerGenerateHashtagsMutator from '../../lib/orval-mutator';
import aiControllerGenerateAltTextMutator from '../../lib/orval-mutator';

/**
 * @summary Generate social media caption
 */
export type aiControllerGenerateCaptionResponse200 = {
  data: GenerateCaptionResponseDto
  status: 200
}
    
export type aiControllerGenerateCaptionResponseSuccess = (aiControllerGenerateCaptionResponse200) & {
  headers: Headers;
};
;

export type aiControllerGenerateCaptionResponse = (aiControllerGenerateCaptionResponseSuccess)

export const getAiControllerGenerateCaptionUrl = () => {


  

  return `/ai/caption`
}

export const aiControllerGenerateCaption = async (generateCaptionDto: GenerateCaptionDto, options?: RequestInit): Promise<aiControllerGenerateCaptionResponse> => {
  
  return aiControllerGenerateCaptionMutator<aiControllerGenerateCaptionResponse>(getAiControllerGenerateCaptionUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      generateCaptionDto,)
  }
);}


/**
 * @summary Generate hashtags for text
 */
export type aiControllerGenerateHashtagsResponse200 = {
  data: GenerateHashtagsResponseDto
  status: 200
}
    
export type aiControllerGenerateHashtagsResponseSuccess = (aiControllerGenerateHashtagsResponse200) & {
  headers: Headers;
};
;

export type aiControllerGenerateHashtagsResponse = (aiControllerGenerateHashtagsResponseSuccess)

export const getAiControllerGenerateHashtagsUrl = () => {


  

  return `/ai/hashtags`
}

export const aiControllerGenerateHashtags = async (generateHashtagsDto: GenerateHashtagsDto, options?: RequestInit): Promise<aiControllerGenerateHashtagsResponse> => {
  
  return aiControllerGenerateHashtagsMutator<aiControllerGenerateHashtagsResponse>(getAiControllerGenerateHashtagsUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      generateHashtagsDto,)
  }
);}


/**
 * @summary Generate alternative text for image
 */
export type aiControllerGenerateAltTextResponse200 = {
  data: GenerateAltTextResponseDto
  status: 200
}
    
export type aiControllerGenerateAltTextResponseSuccess = (aiControllerGenerateAltTextResponse200) & {
  headers: Headers;
};
;

export type aiControllerGenerateAltTextResponse = (aiControllerGenerateAltTextResponseSuccess)

export const getAiControllerGenerateAltTextUrl = () => {


  

  return `/ai/alt-text`
}

export const aiControllerGenerateAltText = async (generateAltTextDto: GenerateAltTextDto, options?: RequestInit): Promise<aiControllerGenerateAltTextResponse> => {
  
  return aiControllerGenerateAltTextMutator<aiControllerGenerateAltTextResponse>(getAiControllerGenerateAltTextUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      generateAltTextDto,)
  }
);}


