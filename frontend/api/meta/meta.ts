/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * YSHAI API
 * The YSHAI backend API documentation. This API manages posts, teams, media, AI generation, moderation, analytics, billing, and more.
 * OpenAPI spec version: 1.0
 */
import type {
  MetaControllerHealth200
} from '.././model';

import { orvalMutator } from '../../lib/orval-mutator';

/**
 * @summary Root
 */
export type metaControllerRootResponse200 = {
  data: string
  status: 200
}
    
export type metaControllerRootResponseSuccess = (metaControllerRootResponse200) & {
  headers: Headers;
};
;

export type metaControllerRootResponse = (metaControllerRootResponseSuccess)

export const getMetaControllerRootUrl = () => {


  

  return `/`
}

export const metaControllerRoot = async ( options?: RequestInit): Promise<metaControllerRootResponse> => {
  
  return orvalMutator<metaControllerRootResponse>(getMetaControllerRootUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Health Check
 */
export type metaControllerHealthResponse200 = {
  data: MetaControllerHealth200
  status: 200
}
    
export type metaControllerHealthResponseSuccess = (metaControllerHealthResponse200) & {
  headers: Headers;
};
;

export type metaControllerHealthResponse = (metaControllerHealthResponseSuccess)

export const getMetaControllerHealthUrl = () => {


  

  return `/health`
}

export const metaControllerHealth = async ( options?: RequestInit): Promise<metaControllerHealthResponse> => {
  
  return orvalMutator<metaControllerHealthResponse>(getMetaControllerHealthUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary List Timezones
 */
export type metaControllerListTimezonesResponse200 = {
  data: string[]
  status: 200
}
    
export type metaControllerListTimezonesResponseSuccess = (metaControllerListTimezonesResponse200) & {
  headers: Headers;
};
;

export type metaControllerListTimezonesResponse = (metaControllerListTimezonesResponseSuccess)

export const getMetaControllerListTimezonesUrl = () => {


  

  return `/meta/timezones`
}

export const metaControllerListTimezones = async ( options?: RequestInit): Promise<metaControllerListTimezonesResponse> => {
  
  return orvalMutator<metaControllerListTimezonesResponse>(getMetaControllerListTimezonesUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary List Locales
 */
export type metaControllerListLocalesResponse200 = {
  data: string[]
  status: 200
}
    
export type metaControllerListLocalesResponseSuccess = (metaControllerListLocalesResponse200) & {
  headers: Headers;
};
;

export type metaControllerListLocalesResponse = (metaControllerListLocalesResponseSuccess)

export const getMetaControllerListLocalesUrl = () => {


  

  return `/meta/locales`
}

export const metaControllerListLocales = async ( options?: RequestInit): Promise<metaControllerListLocalesResponse> => {
  
  return orvalMutator<metaControllerListLocalesResponse>(getMetaControllerListLocalesUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


