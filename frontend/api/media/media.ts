/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * YSHAI API
 * The YSHAI backend API documentation. This API manages posts, teams, media, AI generation, moderation, analytics, billing, and more.
 * OpenAPI spec version: 1.0
 */
import type {
  MediaControllerUploadBody,
  MediaResponseDto
} from '.././model';

import { orvalMutator } from '../../lib/orval-mutator';

/**
 * @summary Upload a media file (image or video) to Cloudinary
 */
export type mediaControllerUploadResponse201 = {
  data: MediaResponseDto
  status: 201
}
    
export type mediaControllerUploadResponseSuccess = (mediaControllerUploadResponse201) & {
  headers: Headers;
};
;

export type mediaControllerUploadResponse = (mediaControllerUploadResponseSuccess)

export const getMediaControllerUploadUrl = () => {


  

  return `/media`
}

export const mediaControllerUpload = async (mediaControllerUploadBody: MediaControllerUploadBody, options?: RequestInit): Promise<mediaControllerUploadResponse> => {
    const formData = new FormData();
if(mediaControllerUploadBody.file !== undefined) {
 formData.append(`file`, mediaControllerUploadBody.file)
 }
if(mediaControllerUploadBody.postId !== undefined) {
 formData.append(`postId`, mediaControllerUploadBody.postId.toString())
 }

  return orvalMutator<mediaControllerUploadResponse>(getMediaControllerUploadUrl(),
  {      
    ...options,
    method: 'POST'
    ,
    body: 
      formData,
  }
);}


/**
 * @summary List all uploaded media
 */
export type mediaControllerFindAllResponse200 = {
  data: MediaResponseDto[]
  status: 200
}
    
export type mediaControllerFindAllResponseSuccess = (mediaControllerFindAllResponse200) & {
  headers: Headers;
};
;

export type mediaControllerFindAllResponse = (mediaControllerFindAllResponseSuccess)

export const getMediaControllerFindAllUrl = () => {


  

  return `/media`
}

export const mediaControllerFindAll = async ( options?: RequestInit): Promise<mediaControllerFindAllResponse> => {
  
  return orvalMutator<mediaControllerFindAllResponse>(getMediaControllerFindAllUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Delete a media file from Cloudinary and database
 */
export type mediaControllerRemoveResponse200 = {
  data: void
  status: 200
}

export type mediaControllerRemoveResponse404 = {
  data: void
  status: 404
}
    
export type mediaControllerRemoveResponseSuccess = (mediaControllerRemoveResponse200) & {
  headers: Headers;
};
export type mediaControllerRemoveResponseError = (mediaControllerRemoveResponse404) & {
  headers: Headers;
};

export type mediaControllerRemoveResponse = (mediaControllerRemoveResponseSuccess | mediaControllerRemoveResponseError)

export const getMediaControllerRemoveUrl = (id: number,) => {


  

  return `/media/${id}`
}

export const mediaControllerRemove = async (id: number, options?: RequestInit): Promise<mediaControllerRemoveResponse> => {
  
  return orvalMutator<mediaControllerRemoveResponse>(getMediaControllerRemoveUrl(id),
  {      
    ...options,
    method: 'DELETE'
    
    
  }
);}


